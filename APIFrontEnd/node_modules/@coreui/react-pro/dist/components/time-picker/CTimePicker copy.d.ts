import React, { ReactNode } from 'react';
import { CFormControlWrapperProps } from '../form/CFormControlWrapper';
import { CPickerProps } from './../picker/CPicker';
export interface CTimePickerProps extends Omit<CFormControlWrapperProps, 'floatingLabel'>, Omit<CPickerProps, 'autoClose' | 'component' | 'dark' | 'placeholder' | 'variant' | 'onChange'> {
    /**
     * A string of all className you want applied to the component.
     */
    className?: string;
    /**
     * Toggle visibility or set the content of the cleaner button.
     */
    cleaner?: ReactNode | boolean;
    /**
     * Toggle visibility or set the content of the input indicator.
     */
    indicator?: ReactNode | boolean;
    /**
     * Toggle the readonly state for the component.
     */
    inputReadOnly?: boolean;
    /**
     * Sets the default locale for components. If not set, it is inherited from the browser.
     */
    locale?: string;
    /**
     * Callback fired when the time changed.
     */
    onTimeChange?: (timeString: string | null, localeTimeString?: string, date?: Date) => void;
    /**
     * Specifies a short hint that is visible in the input.
     */
    placeholder?: string;
    /**
     * Size the component small or large.
     */
    size?: 'sm' | 'lg';
    /**
     * Initial selected time.
     */
    time?: Date | string | null;
    /**
     * Set the time picker variant to a roll or select.
     */
    variant?: 'roll' | 'select';
}
export declare const CTimePicker: React.ForwardRefExoticComponent<CTimePickerProps & React.RefAttributes<HTMLDivElement | HTMLLIElement>>;
